
#ifndef _H_aether_packet_xcvr
#define _H_aether_packet_xcvr
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.12-1

  Combined SIL header
  module aether-packet-xcvr
  revision 2024-10-31
  namespace http://example.com/xcvrs

 */

// #include <libxml/xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_aether_packet_xcvr_M_aether_packet_xcvr (const xmlChar *)"aether-packet-xcvr"
#define y_aether_packet_xcvr_R_aether_packet_xcvr (const xmlChar *)"2024-10-31"

#define y_aether_packet_xcvr_N_id (const xmlChar *)"id"
#define y_aether_packet_xcvr_N_status (const xmlChar *)"status"
#define y_aether_packet_xcvr_N_transceiver (const xmlChar *)"transceiver"
#define y_aether_packet_xcvr_N_transceivers (const xmlChar *)"transceivers"
#define y_aether_packet_xcvr_N_type (const xmlChar *)"type"

/* list /transceivers/transceiver */
typedef struct y_aether_packet_xcvr_T_transceivers_transceiver_ {
  dlq_hdr_t qhdr;
  xmlChar *id;
  xmlChar *type;
  xmlChar *status;
} y_aether_packet_xcvr_T_transceivers_transceiver;

/* container /transceivers */
typedef struct y_aether_packet_xcvr_T_transceivers_ {
  dlq_hdr_t transceiver;
} y_aether_packet_xcvr_T_transceivers;
/********************************************************************
* FUNCTION y_aether_packet_xcvr_init
* 
* initialize the aether-packet-xcvr server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_aether_packet_xcvr_init (
  const xmlChar *modname,
  const xmlChar *revision);

/********************************************************************
* FUNCTION y_aether_packet_xcvr_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_aether_packet_xcvr_init2 (void);

/********************************************************************
* FUNCTION y_aether_packet_xcvr_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void y_aether_packet_xcvr_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif